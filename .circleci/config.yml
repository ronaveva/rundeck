# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
  docker-publish: circleci/docker-publish@0.1.6
  node: circleci/node@1.1.6
  trigger: rundeck/trigger-pipeline@0.0.5

defaults: &defaults
  working_directory: ~/repo
  environment:
    CIRCLE_PIPELINE_NUM: << pipeline.number >>

executors:
  gradle-docker:
    parameters:
      resourceClass:
        type: string
        default: medium
      RUNDECK_GRADLE_OPTS:
        type: string
        default: --no-daemon --max-workers 2 -x check install --stacktrace --info --parallel

    resource_class: << parameters.resourceClass >>


    environment:
      CIRCLE_PIPELINE_NUM: << pipeline.number >>
      RUNDECK_GRADLE_OPTS: << parameters.RUNDECK_GRADLE_OPTS >>
      TERM: dumb
      GRADLE_OPTS: -Xmx1024m -XX:MaxPermSize=192m -Xss50m
      _JAVA_OPTIONS: "-Xmx1024m -Xms200m -Xss50m"
      BASH_ENV: ~/.bash_profile

commands:
  collect-gradle-tests:
    description: Collect JUNIT test reports from entire project
    steps:
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  restore-gradle-cache:
    description: Restore Gradle cache
    steps:
      - restore_cache:
          keys:
            - v2-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          keys:
            - v2-gradle-cache-{{ .Branch }}-<<pipeline.number>>
            - v2-gradle-cache-{{ .Branch }}-
            - v2-gradle-cache-


jobs:
  build:
    <<: *defaults
    # machine: true

    executor:
      name: gradle-docker
      RUNDECK_GRADLE_OPTS: --no-daemon --max-workers 7 -x check install --stacktrace --info --parallel --build-cache
      resourceClass: xlarge

    steps:
      - checkout
      # - node/install-node:
      #     version: '8.13.0'
      - restore-gradle-cache
      - run:
          name: Build
          command: |
            source .circleci/travis-shim.sh
            bash scripts/travis-build.sh build

  test-gradle:
    <<: *defaults
    machine: true
    steps:
      - checkout
      - node/install-node:
          version: '8.13.0'
      - restore-gradle-cache
      - run: ./gradlew --no-daemon check --stacktrace --info --parallel --build-cache
      - collect-gradle-tests

stages:
  test: &stage-test
    - Gradle Test

filters:
  all: &filter-default
    filters:
      branches:
        ignore: /pull\/[0-9]+/
      tags: {only: '/^v.*/'}

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          <<: *filter-default
      - test-gradle:
          <<: *filter-default
          name: Gradle Test
          requires: [build]
